library(pacman)
p_load(readr,rio,tidyverse,skimr,visdat, corrplot,stargazer, scales, haven)
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_filterVariab.csv")
skim(geih_data$y_salary_m_hu)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
labs(title = "Distribución de Salario",
x = "Salario ",
y = "Frecuencia") +
scale_x_continuous(labels = comma)
mediana <- median(geih_data$y_salary_m_hu, na.rm = TRUE)
media <- mean(geih_data$y_salary_m_hu,na.rm = TRUE)
ggplot(geih_data, aes(x = y_salary_mu_h)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
geom_vline(aes(xintercept = media), color = "red", linetype = "solid", linewidth = 1) +
geom_vline(aes(xintercept = mediana), color = "green", linetype = "dashed", linewidth = 1) +
# Escala personalizada para mostrar media y mediana en eje X
scale_x_continuous(
labels = scales::comma,
breaks = sort(c(seq(0, max(geih_data$y_salary_m_hu, na.rm = TRUE), by = 5000),
media, mediana))  # Agrega valores al eje
) +
ggplot2::labs(title = "Distribución de Salario (en miles)",
x = "Salario (miles)",
y = "Frecuencia") +
# Rotar texto para mejor visualización
ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(geih_data, aes(x = y_salary_mu_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
geom_vline(aes(xintercept = media), color = "red", linetype = "solid", linewidth = 1) +
geom_vline(aes(xintercept = mediana), color = "green", linetype = "dashed", linewidth = 1) +
# Escala personalizada para mostrar media y mediana en eje X
scale_x_continuous(
labels = scales::comma,
breaks = sort(c(seq(0, max(geih_data$y_salary_m_hu, na.rm = TRUE), by = 5000),
media, mediana))  # Agrega valores al eje
) +
ggplot2::labs(title = "Distribución de Salario (en miles)",
x = "Salario (miles)",
y = "Frecuencia") +
# Rotar texto para mejor visualización
ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))
names(geih_data)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
geom_vline(aes(xintercept = media), color = "red", linetype = "solid", linewidth = 1) +
geom_vline(aes(xintercept = mediana), color = "green", linetype = "dashed", linewidth = 1) +
# Escala personalizada para mostrar media y mediana en eje X
scale_x_continuous(
labels = scales::comma,
breaks = sort(c(seq(0, max(geih_data$y_salary_m_hu, na.rm = TRUE), by = 5000),
media, mediana))  # Agrega valores al eje
) +
ggplot2::labs(title = "Distribución de Salario (en miles)",
x = "Salario (miles)",
y = "Frecuencia") +
# Rotar texto para mejor visualización
ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))
geih_data_i <- geih_data %>%
mutate(y_salary_m_hu_i = ifelse(is.na(y_salary_m_hu),
median(y_salary_m_hu, na.rm = TRUE),
y_salary_m_hu))
View(geih_data_i)
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_filterVariab.csv")
install.packages("pacman")
library(pacman)
p_load(readr,rio,tidyverse,skimr,visdat, corrplot,stargazer, scales, haven)
# Importar datos de GitHub
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_filterVariab.csv")
#Anális
skim(geih_data$y_salary_m_hu)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
labs(title = "Distribución de Salario",
x = "Salario ",
y = "Frecuencia") +
scale_x_continuous(labels = comma)
media <- mean(geih_data$y_salary_m_hu,na.rm = TRUE)
mediana <- median(geih_data$y_salary_m_hu, na.rm = TRUE)
names(geih_data)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
geom_vline(aes(xintercept = media), color = "red", linetype = "solid", linewidth = 1) +
geom_vline(aes(xintercept = mediana), color = "green", linetype = "dashed", linewidth = 1) +
# Escala personalizada para mostrar media y mediana en eje X
scale_x_continuous(
labels = scales::comma,
breaks = sort(c(seq(0, max(geih_data$y_salary_m_hu, na.rm = TRUE), by = 5000),
media, mediana))  # Agrega valores al eje
) +
ggplot2::labs(title = "Distribución de Salario (en miles)",
x = "Salario (miles)",
y = "Frecuencia") +
# Rotar texto para mejor visualización
ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
geom_vline(aes(xintercept = media), color = "red", linetype = "solid", linewidth = 1) +
geom_vline(aes(xintercept = mediana), color = "green", linetype = "dashed", linewidth = 1) +
# Escala personalizada para mostrar media y mediana en eje X
scale_x_continuous(
labels = scales::comma,
breaks = sort(c(seq(0, max(geih_data$y_salary_m_hu, na.rm = TRUE), by = 5000),
media, mediana))  # Agrega valores al eje
) +
ggplot2::labs(title = "Distribución de Salario (en miles)",
x = "Salario (miles)",
y = "Frecuencia") +
# Rotar texto para mejor visualización
ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))
skim(geih_data$totalhoursworked)
skim(geih_data$totalhoursworked)
min(geih_data$totalhoursworked)
names(geih_data)
geih_data %>% select(y_salary_m_hu,totalhoursworked)
print(geih_data %>% select(y_salary_m_hu,totalhoursworked))
print(geih_data %>% select(y_salary_m_hu,totalhoursworked))
geih_data %>% select(y_salary_m_hu,totalhoursworked)
view()
geih_data %>% select(y_salary_m_hu,totalhoursworked) %>% view()
sum(is.na(geih_data$y_salary_m_hu)&is.na(geih_data$totalhoursworked))
skim(geih_data$y_salary_m_hu)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
labs(title = "Distribución de Salario",
x = "Salario ",
y = "Frecuencia") +
scale_x_continuous(labels = comma)
skim(geih_data$totalhoursworked)
geih_data %>% select(y_salary_m_hu,totalhoursworked) %>% view()
sum(is.na(geih_data$y_salary_m_hu)&is.na(geih_data$totalhoursworked))
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_filterVariab.csv")
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_age_employed_filtered.csv")
skim(geih_data$y_salary_m_hu)
# Importar datos de GitHub
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_age_employed_filtered.csv")
View(geih_data_i)
# Importar datos de GitHub
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_age_employed_filtered.csv")
# Importar datos de GitHub
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_filterVariab.csv")
View(geih_data)
skim(geih_data$y_salary_m_hu)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
labs(title = "Distribución de Salario",
x = "Salario ",
y = "Frecuencia") +
scale_x_continuous(labels = comma)
media <- mean(geih_data$y_salary_m_hu,na.rm = TRUE)
mediana <- median(geih_data$y_salary_m_hu, na.rm = TRUE)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
geom_vline(aes(xintercept = media), color = "red", linetype = "solid", linewidth = 1) +
geom_vline(aes(xintercept = mediana), color = "green", linetype = "dashed", linewidth = 1) +
# Escala personalizada para mostrar media y mediana en eje X
scale_x_continuous(
labels = scales::comma,
breaks = sort(c(seq(0, max(geih_data$y_salary_m_hu, na.rm = TRUE), by = 5000),
media, mediana))  # Agrega valores al eje
) +
ggplot2::labs(title = "Distribución de Salario (en miles)",
x = "Salario (miles)",
y = "Frecuencia") +
# Rotar texto para mejor visualización
ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))
skim(geih_data$totalhoursworked)
min(geih_data$totalhoursworked)
geih_data_i <- geih_data %>%
mutate(y_salary_m_hu_i = ifelse(is.na(y_salary_m_hu),
median(y_salary_m_hu, na.rm = TRUE),
y_salary_m_hu))
View(geih_data_i)
geih_data %>% select(y_salary_m_hu_i,y_salary_m_hu_i) %>% view()
geih_data %>% select(y_salary_m_hu,y_salary_m_hu_i) %>% view()
geih_data_i %>% select(y_salary_m_hu,y_salary_m_hu_i) %>% view()
View(geih_data)
summary(geih_data_i$clase)
skim(geih_data_i$clase)
sum(geih_data_i$clase == 0, na.rm = TRUE)
View(geih_data_i)
# Importar datos de GitHub
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_filterVariab.csv")
install.packages("pacman")
library(pacman)
p_load(readr,rio,tidyverse,skimr,visdat, corrplot,stargazer, scales, haven)
# Importar datos de GitHub
geih_data <- read_csv("https://raw.githubusercontent.com/9marlon9/ProblemSet1/refs/heads/main/geih_data/GEIH2018_filterVariab.csv")
View(geih_data)
skim(geih_data$y_salary_m_hu)
#6.650 missing
#7.946 salario promedio por hora
#11.607 desviación
#Mediana: 4.476
#Min: 152
#Max: 291.667
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
labs(title = "Distribución de Salario",
x = "Salario ",
y = "Frecuencia") +
scale_x_continuous(labels = comma)
#Debido a la asimetría positiva deberíamos imputar por mediana (4476)
media <- mean(geih_data$y_salary_m_hu,na.rm = TRUE)
mediana <- median(geih_data$y_salary_m_hu, na.rm = TRUE)
names(geih_data)
ggplot(geih_data, aes(x = y_salary_m_hu)) +
geom_histogram(bins = 30, fill = "steelblue", na.rm = TRUE) +
geom_vline(aes(xintercept = media), color = "red", linetype = "solid", linewidth = 1) +
geom_vline(aes(xintercept = mediana), color = "green", linetype = "dashed", linewidth = 1) +
# Escala personalizada para mostrar media y mediana en eje X
scale_x_continuous(
labels = scales::comma,
breaks = sort(c(seq(0, max(geih_data$y_salary_m_hu, na.rm = TRUE), by = 5000),
media, mediana))  # Agrega valores al eje
) +
ggplot2::labs(title = "Distribución de Salario (en miles)",
x = "Salario (miles)",
y = "Frecuencia") +
# Rotar texto para mejor visualización
ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))
skim(geih_data$totalhoursworked)
min(geih_data$totalhoursworked)
#Análisis de missing values
names(geih_data)
#Método de imputación (opción 1):
#Debido a la asimetría positiva, se imputa con base a la mediana.
geih_data_i <- geih_data %>%
mutate(y_salary_m_hu_i = ifelse(is.na(y_salary_m_hu),
median(y_salary_m_hu, na.rm = TRUE),
y_salary_m_hu))
geih_data_i %>% select(y_salary_m_hu,y_salary_m_hu_i) %>% view()
skim(geih_data_i$clase)
sum(geih_data_i$clase == 0, na.rm = TRUE)
